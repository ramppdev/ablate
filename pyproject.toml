[project]
name = "ablate"
version = "0.1.0"
description = "ablate"
authors = [{ name = "Simon Rampp", email = "simon@rampp.dev" }]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.10"
keywords = [
    "machine learning",
    "deep learning",
    "experiment tracking",
    "reporting",
    "markdown",
    "CLI",
]

dependencies = [
    "matplotlib>=3.10.3",
    "pandas>=2.2.3",
    "pydantic>=2.11.4",
    "seaborn>=0.13.2",
    "tabulate>=0.9.0",
    "tomli>=2.2.1",
]

[dependency-groups]
dev = [
    "codespell>=2.4.1",
    "pre-commit==4.2.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "ruff==0.11.8",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.optional-dependencies]
mlflow = ["mlflow>=2.22.0"]
jupyter = ["jupyter>=1.1.1"]

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "F",
    "E",
    "W",
    "I",
    "N",
    "Q",
    "ANN",
    "BLE",
    "B",
    "C4",
    "ISC",
    "ICN",
    "LOG",
    "G",
    "PYI",
    "PT",
    "RET",
    "SIM",
    "TC",
    "ERA",
]
ignore = ["E741", "N812", "N806", "N802", "ANN401"]

[tool.ruff.lint.isort]
known-first-party = ["ablate"]
force-sort-within-sections = true
lines-after-imports = 2

[tool.pytest.ini_options]
addopts = "--cov=ablate --cov-report=term-missing"
testpaths = "tests"

[tool.codespell]
skip = "uv.lock"

[tool.mypy]
files = ["ablate", "tests"]
explicit_package_bases = true
ignore_missing_imports = true
